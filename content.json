{"meta":{"title":"猫叔饭-写代码的猫叔个人博客","subtitle":"","description":"","author":"猫叔","url":"https://maoshu.fun","root":"/"},"pages":[{"title":"文章分类","date":"2021-08-06T12:30:16.449Z","updated":"2021-08-06T12:30:16.449Z","comments":true,"path":"categories/index.html","permalink":"https://maoshu.fun/categories/index.html","excerpt":"","text":""},{"title":"","date":"2021-08-07T13:04:36.482Z","updated":"2021-08-07T13:04:36.482Z","comments":true,"path":"404.html","permalink":"https://maoshu.fun/404.html","excerpt":"","text":"404 很抱歉，您访问的页面不存在 可能是输入地址有误或该地址已被删除"},{"title":"","date":"2021-11-04T01:26:15.604Z","updated":"2021-11-04T01:26:15.604Z","comments":true,"path":"about/index.html","permalink":"https://maoshu.fun/about/index.html","excerpt":"","text":"关于提问 有问题可以在知乎发起提问，然后邀请“写代码的猫叔”回答，有问必答 视频相关问题可以在对应视频下方评论区留言 关于我自己 一个比较喜欢做各种小工具的程序员，提高工作效率。 我的技术栈：js nodejs php python 擅长做电商类小工具，主要用来提升工作效率。 个人视频主页 西瓜视频：https://www.ixigua.com/home/60926062851 知乎：https://www.zhihu.com/people/maoshu.fun Bilibili：https://space.bilibili.com/599947600 支付宝红包码 支付宝扫码领红包，领了别忘了花哟，谢谢支持！"},{"title":"常见问题与反馈渠道","date":"2021-08-06T12:30:16.450Z","updated":"2021-08-06T12:30:16.450Z","comments":true,"path":"faqs/index.html","permalink":"https://maoshu.fun/faqs/index.html","excerpt":"通常来说，一个全新的工程全部使用默认配置是正常没有故障的。如果无法使用或者效果与示例有较大区别，可以使用 Hexo 官方提供的用于单元测试的博客应用本主题查看样式是否正常，对比 _config.yml 文件排查问题。 Hexo 官方的单元测试项目： https://github.com/hexojs/hexo-theme-unit-test 向开发者反馈问题","text":"通常来说，一个全新的工程全部使用默认配置是正常没有故障的。如果无法使用或者效果与示例有较大区别，可以使用 Hexo 官方提供的用于单元测试的博客应用本主题查看样式是否正常，对比 _config.yml 文件排查问题。 Hexo 官方的单元测试项目： https://github.com/hexojs/hexo-theme-unit-test 向开发者反馈问题 如何更新主题使用主题的时候，尽量 fork 主题到自己的 GitHub，然后进行修改并使用。这样做的好处是：当主题进行重要更新的时候可以根据需要拉取合并代码，使自己 DIY 的主题能够通过更新获取 BUG 修复或者新特性。 如果不懂请自行搜索关键词：fork 更新 实用小技巧所有需要写在主题配置文件中的配置都可以写在站点配置文件的 theme_config: 中，在 Hexo 5.0 后，还可以写在 _config.volantis.yml 文件中，详见 Hexo 官方文档：覆盖主题配置https://hexo.io/zh-cn/docs/configuration#%E8%A6%86%E7%9B%96%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE也可以直接查看本站源码中站点配置文件的写法：_config.volantis.yml 无法成功运行本地预览 可能是没有安装依赖，请按照「开始」页面中的步骤进行安装，并安装所需依赖。 如果开启了某些第三方服务，请查看文档中是否要求安装插件。 如果报错信息有 lastIndex，你可以尝试把博客根目录配置文件中找到 highlight，并将 auto_detect 设置为 false。 主题配置修改没有生效请确认文档中要求修改的是博客主目录的配置文件 blog/_config.yml 还是主题的配置文件 blog/_config.volantis.yml。 主题样式修改没有生效如果主题配置文件中开启了 cdn 服务，那么修改本地的样式是不会生效的，需要关闭 cdn 服务。 修改什么都没有生效需要 hexo clean 然后重新 hexo s 如果安装了「相关文章推荐」插件后，每次修改 md 文件后都需要重新 hexo s 关掉 CDN 之后样式错乱 请前往文档「开始」页面，检查是否安装了必要的依赖包。 搜索无法使用 请前往文档「开始」页面，检查是否安装了必要的依赖包。 检查根目录配置文件是否有 search 字段冲突。 如果以上两步都无法找到问题，请下载示例源码进行对比。 搜索结果链接不正确请检查根目录配置文件中的链接是否正确，如： url: https://xaoxuu.com root: / 教程与指南 Hexo 官方文档 | Valine 官方文档请一定要阅读官方文档！ 可供交流的渠道解决问题 渠道 方式 用途 Issues @volantis-x/hexo-theme-volantis 和开发者沟通的唯一渠道，用于跟进和解决问题 请不要发送邮件开源项目的开发者很反感别人不通过正确的途径如 Issues 而是通过私人邮件询问开源项目问题，所以一般不会回复此类邮件。 交流 渠道 方式 用途 论坛 @volantis-x/discussions 慢，相对正式，方便检索，可以给其他用户参考 QQ群 1146399464 (验证码: vlts-2021) 非正式，即时通讯，易于斗图；不利于给其他用户参考 佛系互动 渠道 方式 用途 评论区 留言 可以测试、灌水、推广自己的博客。"},{"title":"我的朋友们","date":"2021-08-07T12:57:26.645Z","updated":"2021-08-07T12:57:26.645Z","comments":true,"path":"friends/index.html","permalink":"https://maoshu.fun/friends/index.html","excerpt":"","text":""},{"title":"所有标签","date":"2021-08-06T12:30:16.450Z","updated":"2021-08-06T12:30:16.450Z","comments":true,"path":"tags/index.html","permalink":"https://maoshu.fun/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"油猴脚本案例：cryptojs加密和解密","slug":"油猴脚本案例：cryptojs加密和解密","date":"2021-11-15T01:40:46.000Z","updated":"2021-11-15T01:41:08.996Z","comments":true,"path":"posts/b154afbd.html","link":"","permalink":"https://maoshu.fun/posts/b154afbd.html","excerpt":"","text":"直接上代码 // ==UserScript== // @name 前端加密和解密 // @namespace http://tampermonkey.net/ // @version 0.1 // @description try to take over the world! // @author You // @match https://maoshu.fun/ // @icon https://www.google.com/s2/favicons?domain=csdn.net // @require https://cdn.bootcss.com/crypto-js/3.1.9-1/crypto-js.min.js // @grant none // ==/UserScript== (function() &#123; &#39;use strict&#39;; console.log(&#39;CryptoJS的方法：&#39;,CryptoJS); console.log(&quot;加密 MD5：&quot;+CryptoJS.MD5(&quot;猫叔&quot;)); var pwd=&quot;maoshu&quot;; console.log(&quot;加密 Hmac-MD5：&quot;+CryptoJS.HmacMD5(&quot;猫叔&quot;,pwd)); var salt=CryptoJS.enc.Utf8.parse(&quot;salt&quot;); //盐 var iter=1000; //迭代次数 var res=CryptoJS.PBKDF2(&quot;猫叔&quot;, salt, &#123; keySize: parseInt(4), iterations: parseInt(iter) &#125; ); console.log(&quot;加密 PBKDF2：&quot;+res); //加密 var passswd=&quot;maoshufun&quot;; var jiami=CryptoJS.AES.encrypt(&quot;写代码的猫叔&quot;,passswd); console.log(&quot;加密 encrypt：&quot;+jiami); //解密 var result=CryptoJS.AES.decrypt(jiami,passswd).toString(CryptoJS.enc.Utf8); console.log(&quot;解密 decrypt：&quot;+result); &#125;)();","categories":[],"tags":[{"name":"油猴脚本","slug":"油猴脚本","permalink":"https://maoshu.fun/tags/%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC/"}]},{"title":"油猴脚本案例：定时刷新网页和定时关闭网页","slug":"油猴脚本案例：定时刷新网页和定时关闭网页","date":"2021-11-14T11:56:02.000Z","updated":"2021-11-14T14:57:27.210Z","comments":true,"path":"posts/70cacda7.html","link":"","permalink":"https://maoshu.fun/posts/70cacda7.html","excerpt":"","text":"定时几秒后刷新网页// ==UserScript== // @name 定时刷新网页 // @namespace http://tampermonkey.net/ // @version 0.1 // @description 很简单的一个自动刷新网页功能 // @author 写代码的猫叔 // @match https://maoshu.fun/* // @grant none // ==/UserScript== (function() &#123; &#39;use strict&#39;; // 注意改掉上面的@match，里面是放指定你要刷新的网页网址 // 几秒，例如10就是10秒刷新一次 let timeout = 10 console.log(&#39;%s秒后刷新: &#39;, timeout); setTimeout(() =&gt; &#123; location.reload() &#125;, timeout*1000); &#125;)(); 定时几秒后关闭网页// ==UserScript== // @name 指定时间关闭网页 // @namespace http://tampermonkey.net/ // @version 0.1 // @description 很简单的一个自动关闭网页功能 // @author 写代码的猫叔 // @match https://maoshu.fun/* // @grant none // ==/UserScript== (function() &#123; &#39;use strict&#39;; // 注意改掉上面的@match，里面是放指定你要关闭的网页网址 // 几秒，例如10就是10秒关闭 let timeout = 10 console.log(&#39;%s秒后关闭: &#39;, timeout); setTimeout(() =&gt; &#123; window.close() &#125;, timeout*1000); &#125;)(); 定时几点几分关闭网页// ==UserScript== // @name 定时关闭网页 // @namespace http://tampermonkey.net/ // @version 0.1 // @description try to take over the world! // @author You // @match https://maoshu.fun/ // @icon https://www.google.com/s2/favicons?domain=maoshu.fun // @grant none // ==/UserScript== (function() &#123; &#39;use strict&#39;; let time = &#39;22:54:00&#39; function p(num) &#123; return num&lt;10?&#39;0&#39;+num:num &#125; let tm = setInterval(() =&gt; &#123; console.log(&#39;当前：%d:%d:%d&#39;,new Date().getHours(),new Date().getMinutes(),new Date().getSeconds()); let nowtime = p(new Date().getHours())+&#39;:&#39;+p(new Date().getMinutes())+&#39;:&#39;+p(new Date().getSeconds()) if(nowtime == time)&#123; console.log(&#39;关闭网页&#39;); window.close() &#125; &#125;, 1000); &#125;)();","categories":[],"tags":[{"name":"油猴脚本","slug":"油猴脚本","permalink":"https://maoshu.fun/tags/%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC/"}]},{"title":"工作技巧：企业微信自动回复设置","slug":"工作技巧：企业微信自动回复设置","date":"2021-11-12T23:33:04.000Z","updated":"2021-11-13T02:29:14.690Z","comments":true,"path":"posts/c0909080.html","link":"","permalink":"https://maoshu.fun/posts/c0909080.html","excerpt":"","text":"视频地址：https://www.ixigua.com/7029865467946729991 1.加好友时自动回复一句话 2.客户入群时自动发送欢迎语，可以自动@对应的人 3.群内@小助手自动回复可根据关键词自动回复指定的话术 链接 图片 视频 小程序 还可以根据模板快速配置群","categories":[],"tags":[{"name":"工作技巧","slug":"工作技巧","permalink":"https://maoshu.fun/tags/%E5%B7%A5%E4%BD%9C%E6%8A%80%E5%B7%A7/"}]},{"title":"python语法和js语法的对比","slug":"python语法和js语法的对比","date":"2021-11-11T15:07:12.000Z","updated":"2021-11-14T10:26:45.988Z","comments":true,"path":"posts/8d42e395.html","link":"","permalink":"https://maoshu.fun/posts/8d42e395.html","excerpt":"","text":"打印输出print(&quot;Hello, World!&quot;) console.log(&quot;Hello,World!&quot;) 字符串abc = &#39;字符串&#39; abc = &quot;字符串&quot; abc = &quot;&quot;&quot;字 符 串&quot;&quot;&quot; abc = &#39;&#39;&#39; 字 符 串&#39;&#39;&#39; var abc=&#39;字符串&#39; let abc=&quot;字符串&quot; const abc=` 字 符 串` 解构赋值a,b,c = 1,2,3 print(a,b,c) const &#123;a,b,c&#125; = &#123;a:1,b:2,c:3&#125; console.log(a,b,c) if判断if True: print (&quot;True&quot;) else: print (&quot;False&quot;) if expression : suite elif expression : suite else : suite if(true)&#123; console.log(&#39;true&#39;) &#125; else&#123; console.log(&#39;false&#39;) &#125; if (expression) &#123; suite &#125; else if (expression) &#123; suite &#125; else &#123; suite &#125; 是否包含&#39;你&#39; in &#39;你好啊&#39; &#39;对&#39; not in &#39;你好啊&#39; &#39;你好啊&#39;.includes(&#39;你&#39;) !&#39;你好啊&#39;.includes(&#39;对&#39;)","categories":[],"tags":[{"name":"python","slug":"python","permalink":"https://maoshu.fun/tags/python/"}]},{"title":"thinkphp5.0模型关联查询知识点整理","slug":"thinkphp5-0模型关联查询知识点整理","date":"2021-11-09T13:20:14.000Z","updated":"2021-11-10T09:09:32.942Z","comments":true,"path":"posts/f89586b0.html","link":"","permalink":"https://maoshu.fun/posts/f89586b0.html","excerpt":"","text":"一对一关联hasOnehasOne(‘关联模型名’,’外键名’,’主键名’,’join类型’);默认的join类型为INNER。注意：关联模型名 是驼峰法 为关联模型定义需要查询的字段V5.0.3+版本开始支持return $this-&gt;hasOne(‘Profile’)-&gt;field(‘id,name,email’); hasWhere方法$user = User::hasWhere(‘profile’,[‘email’=&gt;‘&#x74;&#104;&#x69;&#x6e;&#107;&#x70;&#104;&#x70;&#x40;&#x71;&#x71;&#x2e;&#99;&#x6f;&#109;‘])-&gt;find(); belongsTobelongsTo(‘关联模型名’,’外键名’,’关联表主键名’,[‘模型别名定义’],’join类型’); 正在整理中……","categories":[],"tags":[{"name":"thinkphp","slug":"thinkphp","permalink":"https://maoshu.fun/tags/thinkphp/"}]},{"title":"油猴脚本案例：知乎视频页面css优化","slug":"油猴脚本案例：知乎视频页面css优化","date":"2021-11-07T05:21:49.000Z","updated":"2021-11-07T05:22:20.533Z","comments":true,"path":"posts/336e38a0.html","link":"","permalink":"https://maoshu.fun/posts/336e38a0.html","excerpt":"","text":"直接上代码： // ==UserScript== // @name 知乎视频页面 优化 // @namespace http://tampermonkey.net/ // @version 0.1 // @description try to take over the world! // @author You // @match https://www.zhihu.com/people/* // @icon https://www.google.com/s2/favicons?domain=zhihu.com // @grant GM_addStyle // ==/UserScript== (function() &#123; &#39;use strict&#39;; GM_addStyle(` #Profile-zvideos .List-item&#123; width:300px; display:inline-block; &#125; #Profile-zvideos .ContentItem-meta,#Profile-zvideos .RichContent-inner&#123; display:none; &#125; #Profile-zvideos .ContentItem-actions&#123; flex-wrap:wrap; width: 100%; &#125; #Profile-zvideos .ContentItem-title&#123; font-size:15px; margin-bottom: 10px; &#125; #Profile-zvideos .RichContent-cover&#123; width: 300px; height: 184px; &#125; `) // Your code here... &#125;)();","categories":[],"tags":[{"name":"油猴脚本","slug":"油猴脚本","permalink":"https://maoshu.fun/tags/%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC/"}]},{"title":"vscode快捷键整理","slug":"vscode快捷键整理","date":"2021-11-05T05:33:04.000Z","updated":"2021-11-07T05:22:20.530Z","comments":true,"path":"posts/1f36b1f5.html","link":"","permalink":"https://maoshu.fun/posts/1f36b1f5.html","excerpt":"","text":"ctrl+k ctrl+0 1 2 3 等 折叠函数ctrl+k ctrl+j 展开所有函数","categories":[],"tags":[{"name":"vscode","slug":"vscode","permalink":"https://maoshu.fun/tags/vscode/"}]},{"title":"油猴脚本案例：百度收录主动推送文章链接到api接口","slug":"油猴脚本案例：百度收录主动推送文章链接到api接口","date":"2021-10-31T02:37:38.000Z","updated":"2021-11-07T05:20:38.400Z","comments":true,"path":"posts/406b51c6.html","link":"","permalink":"https://maoshu.fun/posts/406b51c6.html","excerpt":"","text":"直接上脚本，注意修改下里面的post网址// ==UserScript== // @name 百度主动推送 // @namespace http://tampermonkey.net/ // @version 0.1 // @description try to take over the world! // @author You // @match https://maoshu.fun/* // @icon https://www.google.com/s2/favicons?domain=maoshu.fun // @require https://cdn.bootcss.com/jquery/3.2.1/jquery.min.js // @grant GM_xmlhttpRequest // ==/UserScript== (function() &#123; &#39;use strict&#39;; function tuisong()&#123; let domain = &#39;https://www.maoshu.fun&#39; let urlArr=[] $(&#39;.post-wrapper&#39;).each((index,ele)=&gt;&#123; let url = $(ele).find(&#39;.article-title a&#39;).attr(&#39;href&#39;) if(url)&#123; url = domain+url urlArr.push(url) &#125; // console.log(url); &#125;) console.log(urlArr); if(urlArr.length)&#123; // 推送到百度代码 GM_xmlhttpRequest(&#123; method:&#39;POST&#39;, headers :&#123; &quot;Content-Type&quot;: &quot;text/plain&quot; &#125;, data:urlArr.join(&#39;\\n&#39;), url:&quot;http://data.zz.baidu.com/urls?site=&quot;+domain+&quot;&amp;token=ishyHABpmcEZMiA6&quot;, onload:(r)=&gt;&#123; console.log(JSON.parse(r.response)); // 这里是自动执行 // setTimeout(() =&gt; &#123; // if($(&#39;.prev-next a.next&#39;).length)&#123; // $(&#39;.prev-next a.next&#39;)[0].click() // &#125; // &#125;, 500); &#125; &#125;) &#125; &#125; tuisong() $(&#39;.prev-next&#39;).on(&#39;click&#39;,&#39;a.next&#39;,()=&gt;&#123; console.log(&#39;点击了下一页&#39;); setTimeout(() =&gt; &#123; tuisong() &#125;, 1200); &#125;) // Your code here... &#125;)(); 改写为await写法，一条一条推送 // ==UserScript== // @name maoshu.fun百度主动推送 一条条同步做法 // @namespace http://tampermonkey.net/ // @version 0.1 // @description try to take over the world! // @author You // @match https://maoshu.fun/* // @icon https://www.google.com/s2/favicons?domain=maoshu.fun // @require https://cdn.bootcss.com/jquery/3.2.1/jquery.min.js // @grant GM_xmlhttpRequest // ==/UserScript== (function() &#123; &#39;use strict&#39;; let domain = &#39;https://www.maoshu.fun&#39; async function tuisong()&#123; for (const key in $(&#39;.post-wrapper&#39;)) &#123; if (Object.hasOwnProperty.call($(&#39;.post-wrapper&#39;), key)) &#123; const element = $(&#39;.post-wrapper&#39;).eq(key); let url = element.find(&#39;.article-title a&#39;).attr(&#39;href&#39;) console.log(url,&#39;---&#39;); if(url)&#123; url = domain+url await wait(url) &#125; &#125; &#125; console.log(&#39;全部执行完了&#39;); &#125; function wait(url)&#123; return new Promise(res=&gt;&#123; // 推送到百度代码 GM_xmlhttpRequest(&#123; method:&#39;POST&#39;, headers :&#123; &quot;Content-Type&quot;: &quot;text/plain&quot; &#125;, data:url, url:&quot;http://data.zz.baidu.com/urls?site=&quot;+domain+&quot;&amp;token=ishyHABpmcEZMiA6&quot;, onload:(r)=&gt;&#123; console.log(JSON.parse(r.response)); res() &#125; &#125;) &#125;) &#125; tuisong() $(&#39;.prev-next&#39;).on(&#39;click&#39;,&#39;a.next&#39;,()=&gt;&#123; console.log(&#39;点击了下一页&#39;); setTimeout(() =&gt; &#123; tuisong() &#125;, 1200); &#125;) // Your code here... &#125;)();","categories":[],"tags":[{"name":"油猴脚本","slug":"油猴脚本","permalink":"https://maoshu.fun/tags/%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC/"}]},{"title":"油猴脚本案例：西瓜视频首页按播放量排序","slug":"油猴脚本案例：西瓜视频首页按播放量排序","date":"2021-10-30T08:27:06.000Z","updated":"2021-10-30T08:38:19.708Z","comments":true,"path":"posts/1870b179.html","link":"","permalink":"https://maoshu.fun/posts/1870b179.html","excerpt":"","text":"直接上代码： // ==UserScript== // @name 西瓜首页按播放量排序 // @namespace http://tampermonkey.net/ // @version 0.1 // @description try to take over the world! // @author You // @match https://www.ixigua.com/ // @icon https://www.google.com/s2/favicons?domain=ixigua.com // @require https://cdn.bootcss.com/jquery/3.2.1/jquery.min.js // @grant GM_addStyle // ==/UserScript== (function() &#123; &#39;use strict&#39;; $(&#39;body&#39;).append(` &lt;div style=&quot;position:fixed;top:100px;right:20px; z-index:99&quot;&gt;&lt;button id=&quot;paixu&quot;&gt;排序&lt;/button&gt;&lt;/div&gt; &lt;div id=&quot;listbox&quot; style=&quot;position:fixed;top:130px;right:20px; z-index:99; background:#fff; padding:10px;border:1px solid #ddd;&quot;&gt; &lt;span class=&quot;closebtn&quot;&gt;&amp;times;&lt;/span&gt; &lt;div class=&quot;body&quot;&gt;&lt;/div&gt; &lt;/div&gt; `) GM_addStyle(` #paixu&#123; padding:5px 10px; cursor:pointer; background:red; color:#fff; border:none &#125; #listbox&#123; display:none; border-radius:5px; width:300px; height:80%; overflow-y:scroll &#125; #listbox .newlist&#123; margin:10px 0 &#125; #listbox .title&#123; color:red; font-size:15px &#125; #listbox .username&#123; color:#333; font-size:13px &#125; .closebtn&#123; position:fixed; color:red; font-size:28px; border:1px solid #ddd; border-radius:50%; width:36px; height:36px; line-height:33px; text-align:center; background:#fff; right:50px; cursor:pointer; &#125; .closebtn:hover&#123; color:#fff; background:red &#125; `) $(document).on(&#39;click&#39;,&#39;.closebtn&#39;,function()&#123; $(&#39;#listbox&#39;).hide() &#125;) $(document).on(&#39;click&#39;,&#39;#paixu&#39;,function()&#123; let arr = [] $(&#39;.FeedContainer__itemWrapper&#39;).each((index,ele)=&gt;&#123; // console.log($(ele)); let t = $(ele).find(&#39;.HorizontalFeedCard__title&#39;).text() let h = $(ele).find(&#39;.HorizontalFeedCard__title&#39;).attr(&#39;href&#39;) let u = $(ele).find(&#39;.user__name&#39;).text() let c = $(ele).find(&#39;.HorizontalFeedCard-accessories-bottomInfo__statistics&#39;).text() let c_arr = c.match(/\\d+(\\.\\d+)?/g) // console.log(c_arr); let c_number = c_arr[0] if(c.includes(&#39;万次&#39;))&#123; c_number = c_number*1000 &#125; arr.push(&#123; t,h,u,c,c_number &#125;) // console.log(t,h,u,c); &#125;) arr = arr.sort((a,b)=&gt;&#123; return b.c_number - a.c_number &#125;) let lists=[] arr.forEach((element,ind) =&gt; &#123; lists.push(` &lt;div class=&quot;newlist&quot;&gt; &lt;a href=&quot;$&#123;element.h&#125;&quot; target=&quot;_blank&quot;&gt; &lt;div class=&quot;title&quot;&gt;$&#123;ind+1&#125;. $&#123;element.t&#125;&lt;/div&gt; &lt;div class=&quot;username&quot;&gt;$&#123;element.u&#125;&lt;/div&gt; &lt;div class=&quot;counts&quot;&gt;$&#123;element.c&#125;&lt;/div&gt; &lt;/a&gt; &lt;/div&gt; `) &#125;); $(&#39;#listbox .body&#39;).html(lists.join(&#39;&#39;)) $(&#39;#listbox&#39;).show() &#125;) &#125;)();","categories":[],"tags":[{"name":"油猴脚本","slug":"油猴脚本","permalink":"https://maoshu.fun/tags/%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC/"}]},{"title":"油猴脚本案例：百度里面引入计算器或淘宝页面","slug":"油猴脚本案例：百度里面引入计算器或淘宝页面","date":"2021-10-30T06:28:31.000Z","updated":"2021-10-30T08:37:33.825Z","comments":true,"path":"posts/e2e5039a.html","link":"","permalink":"https://maoshu.fun/posts/e2e5039a.html","excerpt":"","text":"废话少说，直接上代码： // ==UserScript== // @name 百度里面引入计算器 // @namespace http://tampermonkey.net/ // @version 0.1 // @description try to take over the world! // @author You // @match https://www.baidu.com/ // @icon https://www.google.com/s2/favicons?domain=baidu.com // @require https://cdn.bootcss.com/jquery/3.2.1/jquery.min.js // @grant none // ==/UserScript== (function() &#123; &#39;use strict&#39;; $(&#39;body&#39;).append(` &lt;iframe src=&quot;https://taobao.com&quot; style=&quot;width:550px;height:600px; position:absolute;right:10px;top:100px;&quot;&gt;&lt;/iframe&gt; `) &#125;)();","categories":[],"tags":[{"name":"油猴脚本","slug":"油猴脚本","permalink":"https://maoshu.fun/tags/%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC/"}]},{"title":"Thinkphp5和Vue前后端分离的情况下共享验证码session","slug":"Thinkphp5和Vue前后端分离的情况下共享验证码session","date":"2021-10-26T09:17:11.000Z","updated":"2021-10-26T09:26:11.815Z","comments":true,"path":"posts/a89b1c4d.html","link":"","permalink":"https://maoshu.fun/posts/a89b1c4d.html","excerpt":"","text":"1、首先在Thinkphp5的应用配置文件application/config.php下修改cookie配置项，让二级域名共享cookie这个域名必须是主域名下的二级域名 //在cookie选项加入domain，配置域名 &#39;cookie&#39; =&gt; [ // cookie 有效域名 &#39;domain&#39; =&gt; &#39;api.example.com&#39;, ], 2、服务器端响应头配置将响应头设置成Access-Control-Allow-Origin：域名响应头设置Access-Control-Allow-Credentials:true，表示跨域时，允许cookie添加到请求中。注：设置Access-Control-Allow-Credentials:true后，要将Access-Control-Allow-Origin指定到具体的域，否则cookie不会带到客户端。 header(&#39;Access-Control-Allow-Origin:http://api.example.com&#39;);//允许单个域名 header(&#39;Access-Control-Allow-Credentials: true&#39;);//支持cookie跨域 3、Vue中axios请求配置在main.js中配置axios axios.defaults.withCredentials = true;//让ajax携带cookie 如果不在这个里面的话，可以搜索其他文件 axios.create ，一般是创建的时候配置，例如vue-element-admin里面是在这个文件：src/utils/request.js const service = axios.create(&#123; baseURL: process.env.VUE_APP_BASE_API, // url = base url + request url withCredentials: true, // send cookies when cross-domain requests timeout: 5000 // request timeout &#125;) 4.修改vue文件的host，让域名可以正常访问修改devServer或dev的配置(vue.config.js文件)： port:9528, host:&#39;api.example.com&#39;,","categories":[],"tags":[{"name":"thinkphp","slug":"thinkphp","permalink":"https://maoshu.fun/tags/thinkphp/"}]},{"title":"thinkphp/fastadmin解决前端vue跨域问题","slug":"thinkphp-fastadmin解决前端vue跨域问题","date":"2021-10-22T03:33:42.000Z","updated":"2021-11-10T09:16:06.853Z","comments":true,"path":"posts/78dce704.html","link":"","permalink":"https://maoshu.fun/posts/78dce704.html","excerpt":"","text":"fastadmin的专用方法：修改文件：application/config.php，这是fa的配置文件。修改属性 cors_request_domain，搜一下就找到了，在里面加上你的域名就行了 &#39;cors_request_domain&#39; =&gt; &#39;localhost,127.0.0.1&#39;, tp的通用方法：修改文件：public/index.php，这是tp的入口文件 if(isset($_SERVER[&quot;HTTP_ORIGIN&quot;]) &amp;&amp; strpos($_SERVER[&quot;HTTP_ORIGIN&quot;],&#39;127.0.0.1:8000&#39;) !== false)&#123; // 跨域 header(&#39;Access-Control-Allow-Origin: &#39;.$_SERVER[&quot;HTTP_ORIGIN&quot;]); //星号表示允许所有来源跨域请求，生产环境建议配置成你的来源站点的域名 header(&quot;Access-Control-Allow-Headers: *&quot;); header(&#39;Access-Control-Allow-Methods:*&#39;); header(&#39;Access-Control-Expose-Headers:*&#39;); header(&#39;Access-Control-Allow-Credentials:true&#39;); if (strtoupper($_SERVER[&#39;REQUEST_METHOD&#39;]) == &#39;OPTIONS&#39;) &#123; //浏览器的option试探请求，要exit掉，不然你的业务会被执行两次 echo &#39;&#123;code: 0, msg: &quot;OPTIONS&quot;, time: &quot;&quot;, data: null&#125;&#39;; exit(); &#125; &#125; 下面这句是允许跨域cookie的 header(&#39;Access-Control-Allow-Credentials:true&#39;); 下面这句的判断，是为了本地调试的，只有在本地调试的时候，才允许跨域，这样线上如果不需要跨域的话就更安全些 strpos($_SERVER[&quot;HTTP_ORIGIN&quot;],&#39;127.0.0.1:8000&#39;) !== false 拓展知识：前端带cookieXMLHttpRequest.withCredentials = true jquery的$.ajax配置xhrFields: { withCredentials: true},crossDomain: true,","categories":[],"tags":[{"name":"fastadmin","slug":"fastadmin","permalink":"https://maoshu.fun/tags/fastadmin/"}]},{"title":"fast-小程序：todolist项目文档汇总","slug":"fast-小程序：todolist项目文档汇总","date":"2021-10-11T01:37:09.000Z","updated":"2021-10-31T03:10:20.381Z","comments":true,"path":"posts/45372c3c.html","link":"","permalink":"https://maoshu.fun/posts/45372c3c.html","excerpt":"","text":"网址整理视频教程地址：https://www.ixigua.com/7017702820048536071 后端接口仓库地址：https://gitee.com/maoshushare/fast-todolist 第一节 项目计划和准备工作项目简介本项目是一个fastadmin+微信小程序的实战案例，一个简单的todolist任务管理功能，包括后台数据增删改查、数据统计、api接口开发（小程序对接登录、小程序端管理数据）等。 功能比较简单，覆盖到的知识点不会太多，适合初学者，尤其适合没有做过小程序和fa结合使用的同学。 为便于大家利用碎片时间学习，每节课的时间会尽量控制在10分钟左右。 效果截图本项目是模仿滴答清单的部分功能，大概界面是这样： 项目计划本项目制作思路： 1.先制作基础的后端api部分。 2.再制作小程序界面。 3.小程序对接api，打通基本功能。 4.缺少的api一边补充一边对接。 准备工作 1.准备工具：VsCode(或phpStorm)、phpStudy、chrome浏览器(或Edge)、微信小程序开发工具、apipost 2.下载fastadmin框架代码(https://gitee.com/maoshushare/fastmodel) 3.导入mysql数据库，配置环境，启动项目 第二节 登录和自动注册api验证字段必填先引入Validate，use think\\Validate; $rule = [ &#39;openid&#39; =&gt; &#39;require|length:10,30&#39; ]; $msg = [ &#39;openid.require&#39; =&gt; &#39;缺少openid&#39;, &#39;openid.length&#39; =&gt; &#39;openid长度不符合&#39;, ]; $v = new Validate($rule,$msg); 登录和注册如果已经存在，则登录，不存在则先注册，然后再自动登录 api相关的拓展教程：https://www.bilibili.com/video/BV1Ji4y1V7ZV?p=11 $post=$this-&gt;request-&gt;param(); if (!$v-&gt;check($post)) &#123; $this-&gt;error(&#39;登录失败：&#39; . $v-&gt;getError()); &#125; $u = model(&#39;admin/User&#39;)-&gt;where(&#39;openid&#39;,$post[&quot;openid&quot;])-&gt;find(); if($u)&#123; Token::clear($u[&quot;id&quot;]); $this-&gt;auth-&gt;direct($u[&quot;id&quot;]); $this-&gt;success(&#39;登录成功&#39;, $this-&gt;auth-&gt;getUserinfo()); &#125; else&#123; $username = $post[&quot;openid&quot;]; // 初始密码给一个随机数 $password = Random::alnum(15); $this-&gt;auth-&gt;register($username,$password,&#39;&#39;,&#39;&#39;,[ &quot;openid&quot;=&gt;$post[&quot;openid&quot;] ]); $this-&gt;success(&#39;注册成功&#39;, $this-&gt;auth-&gt;getUserinfo()); &#125; 第三节 创建数据表 生成crud创建数据表：todo字段：userid task status tags prio desctodotimedonetimegiveuptimecreatetime updatetime deletetime 一键生成CRUD 第四节 编写增删改查api新建一个控制器Xcxtodo，专门写关于任务控制的api 增加 和 修改增加和修改写在一起，方便维护 增加 $this-&gt;model -&gt;allowField(true) -&gt;save([ &quot;userid&quot;=&gt;$this-&gt;uid, &quot;tags&quot;=&gt;&quot;测试&quot;, &quot;task&quot;=&gt;&quot;测试3331232233&quot;, ]); 修改 $this-&gt;model -&gt;allowField([ &quot;task&quot; ]) -&gt;save([ &quot;task&quot;=&gt;&quot;89898&quot;, ],[&quot;id&quot;=&gt;20]); 删除根据任务id删除(软删除) 关于软删除的文档说明：https://www.kancloud.cn/manual/thinkphp5/189658 $this-&gt;model-&gt;get($id)-&gt;delete(); $this-&gt;model-&gt;destroy($id); 查询 根据关键词查询任务内容（模糊查询） $task = input(&quot;task&quot;); $where=[ &quot;userid&quot;=&gt;$this-&gt;uid, ]; if($task)&#123; $where[&quot;task&quot;]=[&quot;like&quot;,&quot;%$task%&quot;]; &#125; $list = $this-&gt;model-&gt;where($where)-&gt;select(); 处理标签id为标签文字 $tags = model(&#39;admin/Todotags&#39;)-&gt;where([ &quot;userid&quot;=&gt;$this-&gt;uid, ])-&gt;column(&#39;tags&#39;,&#39;id&#39;); foreach ($list as $key =&gt; &amp;$value) &#123; $tagsArr = explode(&#39;,&#39;,$value[&quot;tags&quot;]); $tagsNameArr = []; foreach ($tagsArr as $id) &#123; $tagsNameArr[] = $tags[$id] ?? $id; &#125; $value[&quot;tagsName&quot;] = implode(&#39;,&#39;,$tagsNameArr); &#125; 根据关键词查询标签 $tags = input(&quot;tags&quot;); $where=[ &quot;userid&quot;=&gt;$this-&gt;uid, ]; if($tags)&#123; $where[&quot;tags&quot;]=[&quot;like&quot;,&quot;%$tags%&quot;]; &#125; $list = $this-&gt;model-&gt;where($where)-&gt;group(&quot;tags&quot;)-&gt;column(&quot;tags&quot;); 改为专表之后： $tags = input(&quot;tags&quot;); $where=[ &quot;userid&quot;=&gt;$this-&gt;uid, ]; if($tags)&#123; $where[&quot;tags&quot;]=[&quot;like&quot;,&quot;%$tags%&quot;]; &#125; $list = model(&#39;admin/Todotags&#39;)-&gt;where($where)-&gt;select(); 根据标签查询任务 $tags = input(&quot;tags&quot;); $where=[ &quot;userid&quot;=&gt;$this-&gt;uid, ]; if($tags)&#123; $where[&quot;tags&quot;]=$tags; &#125; $list = $this-&gt;model-&gt;where($where)-&gt;select(); 改为专表之后：注意exp的写法(https://www.kancloud.cn/manual/thinkphp5/135182) $tags = input(&quot;tags&quot;); $where=[ &quot;userid&quot;=&gt;$this-&gt;uid, ]; $list = $this-&gt;model -&gt;where($where); if($tags)&#123; $list=$list-&gt;where(&#39;&#39;,&#39;exp&#39;, &quot;instr(CONCAT( &#39;,&#39;, tags, &#39;,&#39; ), &#39;,&quot;.$tags.&quot;,&#39; )&quot;); &#125; $list = $list-&gt;select(); 拓展知识instr： INSTR（str,substr）str：从哪个字符串中搜索substr:要搜索的子字符串instr()函数不区分大小写 按日期分组：核心：时间查询（ https://www.kancloud.cn/manual/thinkphp5/165789 ） 已过期的 (status=1 &amp;&amp; todotime 在当前时间之前)根据自己的项目实际需求来做，可以是当前时间以前，也可以是当前日期以前 $where=[ &quot;userid&quot;=&gt;$this-&gt;uid, &quot;status&quot;=&gt;1, ]; $list =$this-&gt;model-&gt;where($where)-&gt;whereTime(&#39;todotime&#39;,&#39;&lt;&#39;,time())-&gt;select(); 今天的 $list =$this-&gt;model-&gt;where($where)-&gt;whereTime(&#39;todotime&#39;,&#39;d&#39;)-&gt;select(); 明天的 $day = date(&#39;Y-m-d&#39;,strtotime(&quot;+1 day&quot;)); $list =$this-&gt;model-&gt;where($where)-&gt;whereTime(&#39;todotime&#39;, &#39;between&#39;, [$day.&#39; 00:00:00&#39;, $day.&#39; 23:59:59&#39;])-&gt;select(); 后天到7日内 $day1 = date(&#39;Y-m-d&#39;,strtotime(&quot;+2 day&quot;)); $day2 = date(&#39;Y-m-d&#39;,strtotime(&quot;+7 day&quot;)); $list =$this-&gt;model-&gt;where($where)-&gt;whereTime(&#39;todotime&#39;, &#39;between&#39;, [$day1.&#39; 00:00:00&#39;, $day2.&#39; 23:59:59&#39;])-&gt;select(); 更久以后 $day2 = date(&#39;Y-m-d&#39;,strtotime(&quot;+7 day&quot;)); $list =$this-&gt;model-&gt;where($where)-&gt;whereTime(&#39;todotime&#39;, &#39;&gt;&#39;, $day2.&#39; 23:59:59&#39;)-&gt;select(); 无计划日期的 （status=1 &amp;&amp; todotime为空） $where=[ &quot;userid&quot;=&gt;$this-&gt;uid, &quot;status&quot;=&gt;1, ]; $list =$this-&gt;model-&gt;where($where)-&gt;whereNull(&#39;todotime&#39;)-&gt;select(); 已完成的 (status=2) $where=[ &quot;userid&quot;=&gt;$this-&gt;uid, &quot;status&quot;=&gt;2, ]; $list =$this-&gt;model-&gt;where($where)-&gt;select(); 已放弃的 （status=3） $where=[ &quot;userid&quot;=&gt;$this-&gt;uid, &quot;status&quot;=&gt;3, ]; $list =$this-&gt;model-&gt;where($where)-&gt;select(); 安全优化修改和删除限制只能操作当前用户自己的数据 修改数据着重分析下update和save的区别(https://www.kancloud.cn/manual/thinkphp5/135189) update方法：allowField无效，不会更新时间 $res = $this-&gt;model // -&gt;allowField(true) //无效 -&gt;where([&quot;id&quot;=&gt;$id,&quot;userid&quot;=&gt; $this-&gt;uid]) -&gt;update($data); save方法：isUpdate(true) if($info = $this-&gt;model-&gt;get([&#39;id&#39;=&gt;$id,&#39;userid&#39;=&gt;$this-&gt;uid]))&#123; $res = $info -&gt;allowField(true) -&gt;isUpdate(true) -&gt;save($data); &#125; else&#123; $this-&gt;error($type.&quot;失败，未找到数据&quot;); &#125; 删除数据$type = &quot;删除&quot;.$id.&quot;数据&quot;; if($info = $this-&gt;model-&gt;get([&#39;id&#39;=&gt;$id,&#39;userid&#39;=&gt;$this-&gt;uid]))&#123; $res = $info-&gt;delete(); &#125; else&#123; $this-&gt;error($type.&quot;失败&quot;); &#125; if($res)&#123; $this-&gt;success($type.&quot;成功&quot;); &#125; else&#123; $this-&gt;error($type.&quot;失败&quot;); &#125; 第五节 小程序小程序准备工作 1.新建项目 2.引入UI库（vant）https://youzan.github.io/vant-weapp/#/quickstart 3.调试ui库看是否正常引入 小程序界面先简单搭建下界面，不需要太完善 &lt;van-cell icon=&quot;todo-list-o&quot; border=&quot;&#123;&#123; false &#125;&#125;&quot;&gt; &lt;view slot=&quot;title&quot;&gt; &lt;view class=&quot;van-cell-text&quot;&gt;收集箱&lt;/view&gt; &lt;!-- &lt;van-tag type=&quot;danger&quot;&gt;标签&lt;/van-tag&gt; --&gt; &lt;/view&gt; &lt;van-icon slot=&quot;right-icon&quot; class=&quot;mr-10&quot; name=&quot;clock-o&quot;/&gt; &lt;van-icon slot=&quot;right-icon&quot; name=&quot;ellipsis&quot; /&gt; &lt;/van-cell&gt; &lt;van-cell-group border=&quot;&#123;&#123; false &#125;&#125;&quot;&gt; &lt;van-field value=&quot;&#123;&#123; sms &#125;&#125;&quot; center clearable label=&quot;&quot; placeholder=&quot;+ 添加任务到收集箱，回车即可保存&quot; border=&quot;&#123;&#123; false &#125;&#125;&quot; use-button-slot class=&quot;ccc&quot; &gt; &lt;view slot=&quot;right-icon&quot;&gt; &lt;van-icon name=&quot;clock-o&quot; class=&quot;mr-10&quot;/&gt; &lt;van-icon name=&quot;ellipsis&quot; /&gt; &lt;/view&gt; &lt;/van-field&gt; &lt;/van-cell-group&gt; &lt;van-collapse value=&quot;&#123;&#123; activeNames &#125;&#125;&quot; bind:change=&quot;onChange&quot; border=&quot;&#123;&#123; false &#125;&#125;&quot;&gt; &lt;van-collapse-item name=&quot;1&quot; border=&quot;&#123;&#123; false &#125;&#125;&quot;&gt; &lt;view slot=&quot;title&quot;&gt;已过期&lt;text class=&quot;smalltext&quot;&gt;4&lt;/text&gt;&lt;/view&gt; &lt;!-- 1 --&gt; &lt;van-cell border=&quot;&#123;&#123; true &#125;&#125;&quot;&gt; &lt;view slot=&quot;title&quot;&gt; &lt;van-checkbox value=&quot;&#123;&#123; checked &#125;&#125;&quot; bind:change=&quot;onChange&quot;&gt; 复选框 &lt;/van-checkbox&gt; &lt;/view&gt; &lt;view slot=&quot;right-icon&quot;&gt; &lt;van-tag round type=&quot;success&quot;&gt;标签&lt;/van-tag&gt; &lt;text class=&quot;mr-10 ml-10&quot;&gt;10-18&lt;/text&gt; &lt;van-icon name=&quot;ellipsis&quot; /&gt; &lt;/view&gt; &lt;/van-cell&gt; &lt;!-- 2 --&gt; &lt;van-cell border=&quot;&#123;&#123; true &#125;&#125;&quot;&gt; &lt;view slot=&quot;title&quot;&gt; &lt;van-checkbox value=&quot;&#123;&#123; true &#125;&#125;&quot; bind:change=&quot;onChange&quot;&gt; 复选框 &lt;/van-checkbox&gt; &lt;/view&gt; &lt;view slot=&quot;right-icon&quot; style=&quot;font-size: 28rpx;&quot;&gt; 10-18 &lt;/view&gt; &lt;van-icon slot=&quot;right-icon&quot; name=&quot;ellipsis&quot; /&gt; &lt;/van-cell&gt; &lt;/van-collapse-item&gt; &lt;/van-collapse&gt; app.json引入组件 &quot;van-button&quot;: &quot;@vant/weapp/button/index&quot;, &quot;van-field&quot;: &quot;@vant/weapp/field/index&quot;, &quot;van-cell&quot;: &quot;@vant/weapp/cell/index&quot;, &quot;van-cell-group&quot;: &quot;@vant/weapp/cell-group/index&quot;, &quot;van-tag&quot;: &quot;@vant/weapp/tag/index&quot;, &quot;van-icon&quot;: &quot;@vant/weapp/icon/index&quot;, &quot;van-collapse&quot;: &quot;@vant/weapp/collapse/index&quot;, &quot;van-collapse-item&quot;: &quot;@vant/weapp/collapse-item/index&quot;, &quot;van-checkbox&quot;: &quot;@vant/weapp/checkbox/index&quot;, &quot;van-checkbox-group&quot;: &quot;@vant/weapp/checkbox-group/index&quot; 第六节 小程序对接api小程序开发文档：https://developers.weixin.qq.com/miniprogram/dev/framework/申请测试号：https://developers.weixin.qq.com/miniprogram/dev/devtools/sandbox.html 登录1.登录授权，获取openidwx.login ( https://developers.weixin.qq.com/miniprogram/dev/api/open-api/login/wx.login.html )获取用户信息 let u = wx.getStorageSync(&#39;userInfo&#39;) if(u)&#123; console.log(1,u); this.setData(&#123; userInfo: u, hasUserInfo:true &#125;) this.login(u) &#125; if (wx.getUserProfile) &#123; this.setData(&#123; canIUseGetUserProfile: true &#125;) &#125; getUserProfile(e) &#123; // 推荐使用wx.getUserProfile获取用户信息，开发者每次通过该接口获取用户个人信息均需用户确认 // 开发者妥善保管用户快速填写的头像昵称，避免重复弹窗 wx.getUserProfile(&#123; desc: &#39;用于完善会员资料&#39;, // 声明获取用户个人信息后的用途，后续会展示在弹窗中，请谨慎填写 success: (res) =&gt; &#123; console.log(&quot;用户信息&quot;,res); wx.setStorageSync(&#39;userInfo&#39;, res.userInfo) this.login(res.userInfo) this.setData(&#123; userInfo: res.userInfo, hasUserInfo: true &#125;) &#125; &#125;) &#125;, 2.根据code获取openid，并且对接登录接口 login(u)&#123; wx.login(&#123; success (res) &#123; console.log(res); if (res.code) &#123; //发起网络请求 wx.request(&#123; url: &#39;http://todo.tt/api/xcxuser/getopenid&#39;, data: &#123; code: res.code, nickName:u.nickName &#125;, success :(res)=&gt;&#123; console.log(res); &#125;, fail:(err)=&gt;&#123; console.log(err); &#125; &#125;) &#125; else &#123; console.log(&#39;登录失败！&#39; + res.errMsg) &#125; &#125; &#125;) &#125; &#125;) 接口： public function getopenid($code) &#123; $url = &quot;https://api.weixin.qq.com/sns/jscode2session?appid=$this-&gt;AppID&amp;secret=$this-&gt;AppSecret&amp;js_code=$code&amp;grant_type=authorization_code&quot;; $res = Http::get($url); $this-&gt;success(&#39;成功&#39;,[&#39;r&#39;=&gt;$this-&gt;request-&gt;param(),&quot;res&quot;=&gt;$res]); &#125; 全局变量 tokenglobalData: &#123; userInfo: null, token:null, apidomain:&#39;http://todo.tt/api&#39; &#125; 封装request方法request(url,data,callback)&#123; wx.request(&#123; url: gb.apidomain + url, data: data, dataType: &#39;json&#39;, enableCache: true, enableHttp2: true, enableQuic: true, header: &#123; token:gb.token &#125;, method: &quot;POST&quot;, // responseType: &#39;json&#39;, success: (result) =&gt; &#123; callback(result) &#125;, fail: (res) =&gt; &#123; console.error(res) &#125;, complete: (res) =&gt; &#123;&#125;, &#125;) &#125; 新增bind:confirm=”confirm_add” confirm_add(event)&#123; // console.log(event.detail); let task = event.detail this.add(task) &#125;, add(task)&#123; if(task != &#39;&#39;)&#123; this.request(&#39;/xcxtodo/addEdit&#39;,&#123; task:task &#125;,(res)=&gt;&#123; console.log(res); wx.showToast(&#123; title: res.data.msg, &#125;) &#125;) &#125; &#125;, 查询和显示引入util.js来格式化时间var util = require(&#39;../../utils/util&#39;) const formatTime = (time, option) =&gt; &#123; const date = new Date(time) const year = date.getFullYear() const month = date.getMonth() + 1 const day = date.getDate() const week = date.getDay() const hour = date.getHours() const minute = date.getMinutes() const second = date.getSeconds() //获取 年月日 if (option == &#39;YY-MM-DD&#39;) return [year, month, day].map(formatNumber).join(&#39;-&#39;) //获取 月日 if (option == &#39;MM-DD&#39;) return [month, day].map(formatNumber).join(&#39;-&#39;) //获取 年月 if (option == &#39;YY-MM&#39;) return [year, month].map(formatNumber).join(&#39;-&#39;) //获取 年 if (option == &#39;YY&#39;) return [year].map(formatNumber).toString() //获取 月 if (option == &#39;MM&#39;) return [mont].map(formatNumber).toString() //获取 日 if (option == &#39;DD&#39;) return [day].map(formatNumber).toString() //获取 年月日 周一 至 周日 if (option == &#39;YY-MM-DD Week&#39;) return [year, month, day].map(formatNumber).join(&#39;-&#39;) + &#39; &#39; + getWeek(week) //获取 月日 周一 至 周日 if (option == &#39;MM-DD Week&#39;) return [month, day].map(formatNumber).join(&#39;-&#39;) + &#39; &#39; + getWeek(week) //获取 周一 至 周日 if (option == &#39;Week&#39;) return getWeek(week) //获取 时分秒 if (option == &#39;hh-mm-ss&#39;) return [hour, minute, second].map(formatNumber).join(&#39;:&#39;) //获取 时分 if (option == &#39;hh-mm&#39;) return [hour, minute].map(formatNumber).join(&#39;:&#39;) //获取 分秒 if (option == &#39;mm-dd&#39;) return [minute, second].map(formatNumber).join(&#39;:&#39;) //获取 时 if (option == &#39;hh&#39;) return [hour].map(formatNumber).toString() //获取 分 if (option == &#39;mm&#39;) return [minute].map(formatNumber).toString() //获取 秒 if (option == &#39;ss&#39;) return [second].map(formatNumber).toString() //默认 时分秒 年月日 return [year, month, day].map(formatNumber).join(&#39;-&#39;) + &#39; &#39; + [hour, minute, second].map(formatNumber).join(&#39;:&#39;) &#125; const formatNumber = n =&gt; &#123; n = n.toString() return n[1] ? n : &#39;0&#39; + n &#125; const getWeek = n =&gt; &#123; switch(n) &#123; case 1: return &#39;星期一&#39; case 2: return &#39;星期二&#39; case 3: return &#39;星期三&#39; case 4: return &#39;星期四&#39; case 5: return &#39;星期五&#39; case 6: return &#39;星期六&#39; case 7: return &#39;星期日&#39; &#125; &#125; module.exports = &#123; formatTime: formatTime &#125; 获取数据，并格式化处理getbyday(opt = &#123;&#125;)&#123; this.request(&#39;/xcxtodo/getbyday&#39;,opt,(res)=&gt;&#123; let datalist = res.data.data for (const key in datalist) &#123; if (Object.hasOwnProperty.call(datalist, key)) &#123; const element = datalist[key]; element.forEach((ele,ind) =&gt; &#123; if(ele.tags)&#123; datalist[key][ind].tagsnum = ele.tags.split(&#39;,&#39;).length &#125; if(ele.todotime)&#123; datalist[key][ind].todotime = util.formatTime(ele.todotime*1000,&#39;MM-DD&#39;) &#125; &#125;); &#125; &#125; this.setData(&#123; datalist &#125;) &#125;) &#125;, 渲染数据 groups:&#123; timeout:&quot;已过期&quot;, today:&quot;今天&quot;, tomorrow:&quot;明天&quot;, seven:&quot;7天&quot;, langtime:&quot;更久以后&quot;, notime:&quot;无日期&quot;, timeend:&quot;已完成&quot;, &#125;, activeNames: [&#39;timeout&#39;,&#39;today&#39;], &lt;block wx:for=&quot;&#123;&#123;groups&#125;&#125;&quot; wx:if=&quot;&#123;&#123;datalist[ind].length>0&#125;&#125;&quot; wx:key=&quot;ind&quot; wx:for-item=&quot;itm&quot; wx:for-index=&quot;ind&quot;&gt; &lt;van-collapse-item name=&quot;&#123;&#123;ind&#125;&#125;&quot;&gt; &lt;view slot=&quot;title&quot;&gt;&#123;&#123;itm&#125;&#125;&lt;text class=&quot;smalltext&quot;&gt;&#123;&#123;datalist[ind].length&#125;&#125;&lt;/text&gt;&lt;/view&gt; &lt;!-- 任务1 --&gt; &lt;block wx:for=&quot;&#123;&#123;datalist[ind]&#125;&#125;&quot; wx:key=&quot;id&quot;&gt; &lt;van-cell&gt; &lt;view slot=&quot;title&quot;&gt; &lt;van-checkbox value=&quot;&#123;&#123; checked &#125;&#125;&quot; bind:change=&quot;onChange&quot;&gt;&#123;&#123;item.task&#125;&#125;&lt;/van-checkbox&gt; &lt;/view&gt; &lt;view slot=&quot;right-icon&quot;&gt; &lt;van-tag round type=&quot;success&quot; wx:if=&quot;&#123;&#123;item.tags_number&#125;&#125;&quot;&gt;&#123;&#123;item.tags_number&#125;&#125;&lt;/van-tag&gt; &lt;text class=&quot;mr-10 ml-10&quot; wx:if=&quot;&#123;&#123;item.todotime&#125;&#125;&quot;&gt;&#123;&#123;item.todotime&#125;&#125;&lt;/text&gt; &lt;van-icon name=&quot;ellipsis&quot; /&gt; &lt;/view&gt; &lt;/van-cell&gt; &lt;/block&gt; &lt;/van-collapse-item&gt; &lt;/block&gt; 修改删除","categories":[],"tags":[{"name":"fastadmin","slug":"fastadmin","permalink":"https://maoshu.fun/tags/fastadmin/"}]},{"title":"油猴脚本案例：拦截点击事件， GM_setClipboard复制文本","slug":"油猴脚本案例：拦截点击事件， GM_setClipboard复制文本","date":"2021-10-10T05:25:18.000Z","updated":"2021-10-10T06:08:56.634Z","comments":true,"path":"posts/cc7c94cd.html","link":"","permalink":"https://maoshu.fun/posts/cc7c94cd.html","excerpt":"","text":"拦截a标签点击，并复制文本：// ==UserScript== // @name 案例：拦截点击，并复制文本 // @match *://www.baidu.com/* // @grant GM_setClipboard // ==/UserScript== (function() &#123; &#39;use strict&#39;; document.querySelectorAll(&#39;.hotsearch-item .title-content-title&#39;).forEach(element =&gt; &#123; element.addEventListener(&#39;click&#39;,(e)=&gt;&#123; // console.log(&#39;clicked&#39;,e); e.preventDefault() GM_setClipboard(e.target.innerText) &#125;) &#125;); // Your code here... &#125;)(); 进阶：添加一个按钮，点击复制// ==UserScript== // @name 案例：添加按钮，拦截点击，并复制文本 // @description 测试样例 // @match *://www.baidu.com/* // @grant GM_setClipboard // ==/UserScript== (function() &#123; &#39;use strict&#39;; document.querySelectorAll(&#39;.hotsearch-item .title-content-title&#39;).forEach(element =&gt; &#123; let btn = document.createElement(&#39;button&#39;) btn.innerText = &#39;复制&#39; element.before(btn) btn.addEventListener(&#39;click&#39;,(e)=&gt;&#123; e.preventDefault() GM_setClipboard(element.innerText) &#125;) &#125;); &#125;)();","categories":[],"tags":[{"name":"油猴脚本","slug":"油猴脚本","permalink":"https://maoshu.fun/tags/%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC/"}]},{"title":"php文件操作的常用函数","slug":"php文件操作的常用函数","date":"2021-10-09T05:23:14.000Z","updated":"2021-10-09T07:02:23.657Z","comments":true,"path":"posts/82c6172.html","link":"","permalink":"https://maoshu.fun/posts/82c6172.html","excerpt":"","text":"删除几分钟前的文件使用案例（删除几天前的日志文件）： $path =SYSTEM_PATH . DIRECTORY_SEPARATOR .&#39;log&#39;; $this-&gt;delete_file($path,$days*24*60); 函数： protected function delete_file($dir,$time_minu) &#123; if(is_dir($dir))&#123; if($dh=opendir($dir))&#123; while (false !== ($file = readdir($dh)))&#123; if($file!=&quot;.&quot; &amp;&amp; $file!=&quot;..&quot;)&#123; $fullpath=$dir.&quot;/&quot;.$file; if(!is_dir($fullpath))&#123; $filedate=filemtime($fullpath); $minutes=round((time()-$filedate)/60); //删除文件 if($minutes&gt;$time_minu)&#123; unlink($fullpath); &#125; &#125; else&#123; $this-&gt;delete_file($fullpath,$time_minu); &#125; &#125; &#125; &#125; closedir($dh); &#125; &#125; 常用函数 class File &#123; public static function mk_dir($dir) &#123; $dir = rtrim($dir, &#39;/&#39;) . &#39;/&#39;; if (!is_dir($dir)) &#123; if (mkdir($dir, 0700, true) == false) &#123; return false; &#125; return true; &#125; return true; &#125; public static function read_file($filename) &#123; $content = &#39;&#39;; if (function_exists(&#39;file_get_contents&#39;)) &#123; @$content = file_get_contents($filename); &#125; else &#123; if (@$fp = fopen($filename, &#39;r&#39;)) &#123; @$content = fread($fp, filesize($filename)); @fclose($fp); &#125; &#125; return $content; &#125; public static function write_file($filename, $writetext, $openmod = &#39;w&#39;) &#123; if (@$fp = fopen($filename, $openmod)) &#123; flock($fp, 2); fwrite($fp, $writetext); fclose($fp); return true; &#125; else &#123; return false; &#125; &#125; public static function del_dir($dirName) &#123; if (!file_exists($dirName)) &#123; return false; &#125; $dir = opendir($dirName); while ($fileName = readdir($dir)) &#123; $file = $dirName . DIRECTORY_SEPARATOR . $fileName; if ($fileName != &#39;.&#39; &amp;&amp; $fileName != &#39;..&#39;) &#123; if (is_dir($file)) &#123; self::del_dir($file); &#125; else &#123; unlink($file); &#125; &#125; &#125; closedir($dir); return rmdir($dirName); &#125; public static function copy_dir($surDir, $toDir) &#123; $surDir = rtrim($surDir, &#39;/&#39;) . &#39;/&#39;; $toDir = rtrim($toDir, &#39;/&#39;) . &#39;/&#39;; if (!file_exists($surDir)) &#123; return false; &#125; if (!file_exists($toDir)) &#123; self::mk_dir($toDir); &#125; $file = opendir($surDir); while ($fileName = readdir($file)) &#123; $file1 = $surDir . &#39;/&#39; . $fileName; $file2 = $toDir . &#39;/&#39; . $fileName; if ($fileName != &#39;.&#39; &amp;&amp; $fileName != &#39;..&#39;) &#123; if (is_dir($file1)) &#123; self::copy_dir($file1, $file2); &#125; else &#123; copy($file1, $file2); &#125; &#125; &#125; closedir($file); return true; &#125; public static function get_dirs($dir) &#123; $dir = rtrim($dir, &#39;/&#39;) . &#39;/&#39;; $dirArray[][] = null; if (false != ($handle = opendir($dir))) &#123; $i = 0; $j = 0; while (false !== ($file = readdir($handle))) &#123; if (is_dir($dir . $file)) &#123; $dirArray[&#39;dir&#39;][$i] = $file; $i++; &#125; else &#123; $dirArray[&#39;file&#39;][$j] = $file; $j++; &#125; &#125; closedir($handle); &#125; return $dirArray; &#125; public static function get_size($dir) &#123; $dirlist = opendir($dir); $dirsize = 0; while (false !== ($folderorfile = readdir($dirlist))) &#123; if ($folderorfile != &quot;.&quot; &amp;&amp; $folderorfile != &quot;..&quot;) &#123; if (is_dir(&quot;$dir/$folderorfile&quot;)) &#123; $dirsize += self::get_size(&quot;$dir/$folderorfile&quot;); &#125; else &#123; $dirsize += filesize(&quot;$dir/$folderorfile&quot;); &#125; &#125; &#125; closedir($dirlist); return $dirsize; &#125; public static function empty_dir($dir) &#123; return (($files = @scandir($dir)) &amp;&amp; count($files) &lt;= 2); &#125; public function cache($name, $value = &#39;&#39;, $path = DATA_PATH, $cached = true) &#123; static $_cache = array(); $filename = $path . $name . &#39;.php&#39;; if (&#39;&#39; !== $value) &#123; if (is_null($value)) &#123; return false !== strpos($name, &#39;*&#39;) ? array_map(&quot;unlink&quot;, glob($filename)) : unlink($filename); &#125; else &#123; $dir = dirname($filename); if (!is_dir($dir)) &#123; mkdir($dir, 0755, true); &#125; $_cache[$name] = $value; return file_put_contents($filename, strip_whitespace(&quot;&lt;?php\\treturn &quot; . var_export($value, true) . &quot;;?&gt;&quot;)); &#125; &#125; if (isset($_cache[$name]) &amp;&amp; $cached == true) &#123; return $_cache[$name]; &#125; if (is_file($filename)) &#123; $value = include $filename; $_cache[$name] = $value; &#125; else &#123; $value = false; &#125; return $value; &#125; &#125;","categories":[],"tags":[]},{"title":"electron-forge的安装方法和遇到的坑","slug":"electron-forge","date":"2021-08-20T08:08:23.000Z","updated":"2021-08-24T03:41:03.582Z","comments":true,"path":"posts/3e5d6f64.html","link":"","permalink":"https://maoshu.fun/posts/3e5d6f64.html","excerpt":"","text":"遇到的坑首先根据官网文档：https://www.electronforge.io/，`yarn create electron-app my-app`，执行到一半卡住了。然后找了其他方法，如下: 全局安装forge clinpm i -g @electron-forge/cli 这里我安装报错了，所以改为了 cnpm的方式安装，安装成功了 npm i -g @electron-forge/cli 但是运行 electron-forge init my-app 来创建项目，依旧是卡住，卡住的地方一模一样： 卡在这里走不动 解决方法 在之前安装electron时也遇到过卡死，当时时因为网络原因，那这个可能也是网络原因 配置下npm的镜像源 npm config set ELECTRON_MIRROR http://npm.taobao.org/mirrors/electron/ 再次执行 electron-forge init my-app ，成功了，虽然安装npm dependencies也用了一段时间，但是终究快很多，不至于卡死 启动npm start 打包和发布打包为绿色免安装文件npm run package 打包为exe文件但我这边一直报错，无法解决 npm run make 找了各种方法都无法解决，没办法，只能用第三方工具去打包了 使用 Inno Setup 打包为exe安装程序下载地址：https://pc.qq.com/detail/13/detail_1313.html","categories":[],"tags":[{"name":"electron","slug":"electron","permalink":"https://maoshu.fun/tags/electron/"}]},{"title":"vue-elementui-admin安装步骤和安装依赖报错解决方案整理","slug":"vue-elementui-admin安装步骤和安装依赖报错解决方案整理","date":"2021-08-10T13:41:50.000Z","updated":"2021-08-10T13:43:11.082Z","comments":true,"path":"posts/c453aadd.html","link":"","permalink":"https://maoshu.fun/posts/c453aadd.html","excerpt":"","text":"文档&amp;链接文档说明：https://panjiachen.github.io/vue-element-admin-site/zh/guide/admin集成方案：https://github.com/PanJiaChen/vue-element-admin基础模板方案：https://github.com/PanJiaChen/vue-admin-template/tree/permission-control 我此次用的是基础方案，带路由权限控制的版本 开始安装1.克隆git仓库遇到第一个问题：http代理问题解决方法：取消http代理 git config --global --unset http.proxy 2.安装依赖 npm install依赖非常多，安装非常慢，一定要耐心等这次很幸运，顺利安装完成： 不幸的各种情况整理1.python报错Error: Can’t find Python executable “python”, you can set the PYTHON env variable解决方法：npm install –global –production windows-build-toolsnpm install -g node-gyp 检查下系统环境变量里是否有python，没有的话，配置下环境变量 3.启动 npm run dev","categories":[],"tags":[]},{"title":"一些好用的npm包和github项目整理","slug":"一些好用的npm包整理","date":"2021-08-10T05:36:46.000Z","updated":"2021-09-30T01:31:31.453Z","comments":true,"path":"posts/effba3b3.html","link":"","permalink":"https://maoshu.fun/posts/effba3b3.html","excerpt":"","text":"一键复制 https://www.npmjs.com/package/clipboard vue复制 https://www.npmjs.com/package/vue-clipboard 时间日期 https://www.npmjs.com/package/dayjs 快速删除node_modules npm install rimraf -g rimraf node_modules 浏览器同步 browser-sync 裁剪图片神器 cropperjs 文件下载 FileSaver 判断当前用户输入是否触发快捷键 is-hotkey 浏览器滚动条美化 perfect-scrollbar 小提示窗popper 代码高亮处理highlight 或 prism 无头浏览器 puppeteer 强烈推荐 二维码生成 qrcode 参数处理，基本必备 query-string 浏览器信息处理 ua-parser-js 实用工具库 loadsh cookie处理 js-cookie 媒体类型 mime 地址格式化 address-parse element 地址类组件库 element-address","categories":[],"tags":[]},{"title":"fastadmin按钮buttons全部事件整理","slug":"fastadmin按钮全部事件整理","date":"2021-08-07T23:54:16.000Z","updated":"2021-11-13T00:34:25.691Z","comments":true,"path":"posts/31bfa1d6.html","link":"","permalink":"https://maoshu.fun/posts/31bfa1d6.html","excerpt":"","text":"对应的视频地址：https://www.ixigua.com/7029550092092703262 https://www.ixigua.com/7029551561626157605 相关链接 一张图解析FastAdmin中的表格列表的功能(第15条) https://ask.fastadmin.net/article/323.html 一张图解析FastAdmin中的弹出窗口的功能 https://ask.fastadmin.net/article/2527.html classname来控制按钮执行方式弹出窗口 btn-dialog，ajax请求 btn-ajax，新选项卡btn-addtabs，自定义点击事件 btn-click 按钮组 样例&#123; field: &#39;buttons&#39;, width: &quot;120px&quot;, title: &#39;按钮组&#39;, table: table, events: Table.api.events.operate, buttons: [ ], formatter: Table.api.formatter.buttons &#125; 弹出窗口 btn-dialog 修改弹出窗大小 extend: &#39; data-area = \\&#39;[&quot;800px&quot;,&quot;600px&quot;]\\&#39; &#39;, &#123; name: &#39;detail&#39;, text: __(&#39;弹出窗口打开&#39;), title: __(&#39;弹出窗口打开&#39;), classname: &#39;btn btn-xs btn-primary btn-dialog&#39;, icon: &#39;fa fa-list&#39;, url: &#39;example/bootstraptable/detail&#39;, callback: function (data) &#123; Layer.alert(&quot;接收到回传数据：&quot; + JSON.stringify(data), &#123;title: &quot;回传数据&quot;&#125;); &#125;, visible: function (row) &#123; //返回true时按钮显示,返回false隐藏 return true; &#125; &#125; ajax请求 btn-ajax完成后刷新表格注意这里是或者的关系，不能同时用 refresh: true, //或者 success: function (data, ret) &#123; table.bootstrapTable(&#39;refresh&#39;); &#125;, &#123; name: &#39;ajax&#39;, text: __(&#39;发送Ajax&#39;), title: __(&#39;发送Ajax&#39;), classname: &#39;btn btn-xs btn-success btn-magic btn-ajax&#39;, icon: &#39;fa fa-magic&#39;, url: &#39;example/bootstraptable/detail&#39;, confirm: &#39;确认发送&#39;, success: function (data, ret) &#123; Layer.alert(ret.msg + &quot;,返回数据：&quot; + JSON.stringify(data)); //如果需要阻止成功提示，则必须使用return false; //return false; &#125;, error: function (data, ret) &#123; console.log(data, ret); Layer.alert(ret.msg); return false; &#125; &#125; 新选项卡 btn-addtabs &#123; name: &#39;addtabs&#39;, text: __(&#39;新选项卡中打开&#39;), title: __(&#39;新选项卡中打开&#39;), classname: &#39;btn btn-xs btn-warning btn-addtabs&#39;, icon: &#39;fa fa-folder-o&#39;, url: &#39;example/bootstraptable/detail&#39; &#125; 自定义点击按钮事件 btn-click此处例子为点击弹出窗口，输入文字，执行ajax请求 &#123; name: &#39;shield&#39;, text: &#39;完成&#39;, icon: &#39;fa fa-check-circle fa-fw&#39;, classname: &#39;btn btn-xs btn-success btn-click&#39;, click:function(e,s) &#123; layer.prompt(&#123;title:&quot;填写奖金数值&quot;&#125;,function(val, index)&#123; if(!val || val ==0 )&#123; layer.msg(&quot;请先填写正确的奖金数值！&quot;); return; &#125; if (isNaN(val)) &#123; layer.msg(&quot;请输入数字！&quot;); return; &#125; $.ajax(&#123; type: &quot;post&quot;, url: &quot;survey/over&quot;, data: &#123; ids:s.id, bonus:val &#125;, dataType: &quot;json&quot;, success: function (response) &#123; if(response.code == 2)&#123; layer.msg(response.msg) &#125; else&#123; layer.close(index); table.bootstrapTable(&#39;refresh&#39;); &#125; &#125; &#125;); &#125;); return false &#125;, refresh: true, visible: function (row) &#123; //返回true时按钮显示,返回false隐藏 // console.log(row) return !row.status; &#125; &#125;, 普通列（非操作列）里怎么加按钮利用formatter 来处理再输出 &#123;field: &#39;ceshis&#39;, title: __(&#39;Ceshis&#39;),formatter:function(a,b,c) &#123; console.log(&#39;a,b,c: &#39;, a,b,c); return a+&#39;--&#39;+&#39;&lt;button class=&quot;btn btn-xs btn-info&quot; onclick=&quot;console.log(&#39;+c+&#39;);return false;&quot;&gt;点击&lt;/button&gt;&#39; &#125;&#125;, 怎么去掉edit del dragsort 这样的按钮修改 operate 其他参数 dropdown: ‘更多’,//如果包含dropdown，将会以下拉列表的形式展示 &#123; name: &#39;addtabs&#39;, text: __(&#39;新选项卡中打开&#39;), title: __(&#39;新选项卡中打开&#39;), dropdown: &#39;更多&#39;,//如果包含dropdown，将会以下拉列表的形式展示 classname: &#39;btn btn-xs btn-warning btn-addtabs&#39;, icon: &#39;fa fa-folder-o&#39;, url: &#39;./ceshi1/demo1&#39; &#125; 扩展知识：点击就自动选中了checkbox，双击就弹出编辑，怎么关闭？方法1：改html:table 加上属性即可 ： 关闭点击选中： data-click-to-select=&quot;false&quot; 关闭双击编辑：data-dbl-click-to-edit=&quot;false&quot; 方法2：改jsclickToSelect: false, //是否启用点击选中 dblClickToEdit: false, //是否启用双击编辑 方法3：改js可控制某一列禁用点击选中 table.on(&#39;post-body.bs.table&#39;, function (e, settings, json, xhr) &#123; $(&#39;tr td:eq(2)&#39;,this).off(&#39;click&#39;) &#125;); 可定义自己的双击事件 table.on(&#39;dbl-click-row.bs.table&#39;, function (e, row, element, field) &#123; console.log(&#39;双击一行&#39;); return false // $(Table.config.editonebtn, element).trigger(&quot;click&quot;); &#125;);","categories":[],"tags":[{"name":"fastadmin","slug":"fastadmin","permalink":"https://maoshu.fun/tags/fastadmin/"}]},{"title":"hexo-volantis主题修改代码高亮风格","slug":"hexo-volantis主题修改代码高亮风格","date":"2021-08-07T06:38:02.000Z","updated":"2021-08-07T12:04:17.044Z","comments":true,"path":"posts/22663.html","link":"","permalink":"https://maoshu.fun/posts/22663.html","excerpt":"","text":"前言 猫叔的博客是基于hexo制作的，选用主题为volantis，纵然这套主题我是特别喜欢，但它的代码高亮做的不是特别适合我，不如next主题里面的代码高亮风格那么好看（主要是暗色风格），但next主题我又不是特别喜欢，于是研究了下他的修改方法，终于找到 一篇改造博客，但里面多少有点错误并且步骤不完整，于是做一些补充。 步骤1.highlightjs不支持显示行号，改造使其支持1).修改ejs文件修改路径：themes/volantis/layout/_third-party/highlistjs/script.ejs 改造核心如下图，就是引入了highlightjs-line-numbers.min.js： 改造后代码： &lt;% if (theme.plugins.highlightjs.js) &#123; %&gt; &lt;%- js(theme.plugins.highlightjs.js) %&gt; &lt;script src=&quot;https://cdn.jsdelivr.net/npm/highlightjs-line-numbers.js@2.8.0/dist/highlightjs-line-numbers.min.js&quot;&gt;&lt;/script&gt; &lt;script&gt;hljs.initHighlightingOnLoad();&lt;/script&gt; &lt;script&gt;hljs.initLineNumbersOnLoad(&#123; singleLine: true &#125;);&lt;/script&gt; &lt;% &#125; %&gt; &lt;script&gt; volantis.pjax.push(()=&gt;&#123; document.querySelectorAll(&#39;pre code&#39;).forEach((block) =&gt; &#123; hljs.highlightBlock(block); hljs.lineNumbersBlock(block, &#123; singleLine: true &#125;); &#125;); &#125;,&quot;highlightjs&quot;) &lt;/script&gt; 注意，这时候可能控制台会报如下提示，只需把hljs.initHighlightingOnLoad()改为hljs.highlightAll()即可 Deprecated as of 10.6.0. initHighlightingOnLoad() is deprecated. Use highlightAll() instead. 2).创建行号的样式文件.styl路径：themes/volantis/source/css/ 目录下新建 _other 文件夹，然后在里面新建 codeblock.styl 文件，路径如下图： css样式代码如下： /* for block of numbers */ .hljs-ln-numbers &#123; -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; text-align: center; color: #666; border-right: 1px solid #666; vertical-align: top; padding-right: 5px !important; /* your custom style here */ &#125; /* for block of code */ .hljs-ln-code &#123; padding-left: 10px !important; &#125; 3.)引入styl文件修改路径：source/css/style.styl，添加以下内容： @import &#39;_other/*&#39; 2.禁用hexo默认的高亮设置打开hexo的根目录下的主配置文件_config.yml，highlight设为false highlight: enable: false 3.修改volantis的高亮设置修改路径：_config.volantis.yml或者volantis主题下的_config.yml文件，搜索 highlightjs 关键字，找到高亮配置（如果没有的话，则添加即可），把他开启，并设置新的css样式 1.找合适的css样式表去官网找 https://highlightjs.org/static/demo/点击左侧theme查看效果，最终挑选好喜欢的样式这里我找的是Night Owl这款，于是拼接样式地址https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@10/build/styles/night-owl.min.css，重点就是结尾的文件名night-owl，规则就是驼峰写法的转换。 2.修改配置enable改为true，修改css引用 plugins: highlightjs: enable: true js: https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@10/build/highlight.min.js css: https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@10/build/styles/night-owl.min.css 完成改完记得 hexo g &amp;&amp; hexo s 查看效果，如果有些文章不生效，那就需要先执行 hexo clean 效果图：","categories":[],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://maoshu.fun/tags/hexo/"}]},{"title":"fastadmin 常用知识点整理","slug":"fastadmin","date":"2021-08-07T03:52:53.000Z","updated":"2021-08-07T23:54:52.423Z","comments":true,"path":"posts/25256.html","link":"","permalink":"https://maoshu.fun/posts/25256.html","excerpt":"","text":"js里怎么取到config里的数据 以token为例，这里先在后端把数据写入config，然后在前端js里就会有我们设置的token了 1.后端php部分$this-&gt;assignconfig(&quot;token&quot;, $this-&gt;auth-&gt;token); 2.前端js部分console.log(Config.token) 通过变量Config可以取到你想要的东西","categories":[],"tags":[{"name":"fastadmin","slug":"fastadmin","permalink":"https://maoshu.fun/tags/fastadmin/"}]}],"categories":[],"tags":[{"name":"油猴脚本","slug":"油猴脚本","permalink":"https://maoshu.fun/tags/%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC/"},{"name":"工作技巧","slug":"工作技巧","permalink":"https://maoshu.fun/tags/%E5%B7%A5%E4%BD%9C%E6%8A%80%E5%B7%A7/"},{"name":"python","slug":"python","permalink":"https://maoshu.fun/tags/python/"},{"name":"thinkphp","slug":"thinkphp","permalink":"https://maoshu.fun/tags/thinkphp/"},{"name":"vscode","slug":"vscode","permalink":"https://maoshu.fun/tags/vscode/"},{"name":"fastadmin","slug":"fastadmin","permalink":"https://maoshu.fun/tags/fastadmin/"},{"name":"electron","slug":"electron","permalink":"https://maoshu.fun/tags/electron/"},{"name":"hexo","slug":"hexo","permalink":"https://maoshu.fun/tags/hexo/"}]}