{"meta":{"title":"猫叔饭-写代码的猫叔个人博客","subtitle":"","description":"","author":"猫叔","url":"https://maoshu.fun","root":"/"},"pages":[{"title":"","date":"2021-08-07T13:04:36.482Z","updated":"2021-08-07T13:04:36.482Z","comments":true,"path":"404.html","permalink":"https://maoshu.fun/404.html","excerpt":"","text":"404 很抱歉，您访问的页面不存在 可能是输入地址有误或该地址已被删除"},{"title":"","date":"2021-08-07T13:02:25.667Z","updated":"2021-08-07T13:02:25.667Z","comments":true,"path":"about/index.html","permalink":"https://maoshu.fun/about/index.html","excerpt":"","text":"其实没什么"},{"title":"文章分类","date":"2021-08-06T12:30:16.449Z","updated":"2021-08-06T12:30:16.449Z","comments":true,"path":"categories/index.html","permalink":"https://maoshu.fun/categories/index.html","excerpt":"","text":""},{"title":"常见问题与反馈渠道","date":"2021-08-06T12:30:16.450Z","updated":"2021-08-06T12:30:16.450Z","comments":true,"path":"faqs/index.html","permalink":"https://maoshu.fun/faqs/index.html","excerpt":"通常来说，一个全新的工程全部使用默认配置是正常没有故障的。如果无法使用或者效果与示例有较大区别，可以使用 Hexo 官方提供的用于单元测试的博客应用本主题查看样式是否正常，对比 _config.yml 文件排查问题。 Hexo 官方的单元测试项目： https://github.com/hexojs/hexo-theme-unit-test 向开发者反馈问题","text":"通常来说，一个全新的工程全部使用默认配置是正常没有故障的。如果无法使用或者效果与示例有较大区别，可以使用 Hexo 官方提供的用于单元测试的博客应用本主题查看样式是否正常，对比 _config.yml 文件排查问题。 Hexo 官方的单元测试项目： https://github.com/hexojs/hexo-theme-unit-test 向开发者反馈问题 如何更新主题使用主题的时候，尽量 fork 主题到自己的 GitHub，然后进行修改并使用。这样做的好处是：当主题进行重要更新的时候可以根据需要拉取合并代码，使自己 DIY 的主题能够通过更新获取 BUG 修复或者新特性。 如果不懂请自行搜索关键词：fork 更新 实用小技巧所有需要写在主题配置文件中的配置都可以写在站点配置文件的 theme_config: 中，在 Hexo 5.0 后，还可以写在 _config.volantis.yml 文件中，详见 Hexo 官方文档：覆盖主题配置https://hexo.io/zh-cn/docs/configuration#%E8%A6%86%E7%9B%96%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE也可以直接查看本站源码中站点配置文件的写法：_config.volantis.yml 无法成功运行本地预览 可能是没有安装依赖，请按照「开始」页面中的步骤进行安装，并安装所需依赖。 如果开启了某些第三方服务，请查看文档中是否要求安装插件。 如果报错信息有 lastIndex，你可以尝试把博客根目录配置文件中找到 highlight，并将 auto_detect 设置为 false。 主题配置修改没有生效请确认文档中要求修改的是博客主目录的配置文件 blog/_config.yml 还是主题的配置文件 blog/_config.volantis.yml。 主题样式修改没有生效如果主题配置文件中开启了 cdn 服务，那么修改本地的样式是不会生效的，需要关闭 cdn 服务。 修改什么都没有生效需要 hexo clean 然后重新 hexo s 如果安装了「相关文章推荐」插件后，每次修改 md 文件后都需要重新 hexo s 关掉 CDN 之后样式错乱 请前往文档「开始」页面，检查是否安装了必要的依赖包。 搜索无法使用 请前往文档「开始」页面，检查是否安装了必要的依赖包。 检查根目录配置文件是否有 search 字段冲突。 如果以上两步都无法找到问题，请下载示例源码进行对比。 搜索结果链接不正确请检查根目录配置文件中的链接是否正确，如： url: https://xaoxuu.com root: / 教程与指南 Hexo 官方文档 | Valine 官方文档请一定要阅读官方文档！ 可供交流的渠道解决问题 渠道 方式 用途 Issues @volantis-x/hexo-theme-volantis 和开发者沟通的唯一渠道，用于跟进和解决问题 请不要发送邮件开源项目的开发者很反感别人不通过正确的途径如 Issues 而是通过私人邮件询问开源项目问题，所以一般不会回复此类邮件。 交流 渠道 方式 用途 论坛 @volantis-x/discussions 慢，相对正式，方便检索，可以给其他用户参考 QQ群 1146399464 (验证码: vlts-2021) 非正式，即时通讯，易于斗图；不利于给其他用户参考 佛系互动 渠道 方式 用途 评论区 留言 可以测试、灌水、推广自己的博客。"},{"title":"我的朋友们","date":"2021-08-07T12:57:26.645Z","updated":"2021-08-07T12:57:26.645Z","comments":true,"path":"friends/index.html","permalink":"https://maoshu.fun/friends/index.html","excerpt":"","text":""},{"title":"所有标签","date":"2021-08-06T12:30:16.450Z","updated":"2021-08-06T12:30:16.450Z","comments":true,"path":"tags/index.html","permalink":"https://maoshu.fun/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"fastadmin按钮全部事件整理","slug":"fastadmin按钮全部事件整理","date":"2021-08-07T23:54:16.000Z","updated":"2021-08-08T01:29:13.297Z","comments":true,"path":"posts/31bfa1d6.html","link":"","permalink":"https://maoshu.fun/posts/31bfa1d6.html","excerpt":"","text":"相关链接 一张图解析FastAdmin中的表格列表的功能(第15条) https://ask.fastadmin.net/article/323.html 一张图解析FastAdmin中的弹出窗口的功能 https://ask.fastadmin.net/article/2527.html classname来控制按钮执行方式弹出窗口 btn-dialog，ajax请求 btn-ajax，新选项卡btn-addtabs，自定义点击事件 btn-click 按钮组 样例&#123; field: &#39;buttons&#39;, width: &quot;120px&quot;, title: &#39;按钮组&#39;, table: table, events: Table.api.events.operate, buttons: [ , , ], formatter: Table.api.formatter.buttons &#125; 弹出窗口 btn-dialog &#123; name: &#39;detail&#39;, text: __(&#39;弹出窗口打开&#39;), title: __(&#39;弹出窗口打开&#39;), classname: &#39;btn btn-xs btn-primary btn-dialog&#39;, icon: &#39;fa fa-list&#39;, url: &#39;example/bootstraptable/detail&#39;, callback: function (data) &#123; Layer.alert(&quot;接收到回传数据：&quot; + JSON.stringify(data), &#123;title: &quot;回传数据&quot;&#125;); &#125;, visible: function (row) &#123; //返回true时按钮显示,返回false隐藏 return true; &#125; &#125; ajax请求 btn-ajax &#123; name: &#39;ajax&#39;, text: __(&#39;发送Ajax&#39;), title: __(&#39;发送Ajax&#39;), classname: &#39;btn btn-xs btn-success btn-magic btn-ajax&#39;, icon: &#39;fa fa-magic&#39;, url: &#39;example/bootstraptable/detail&#39;, confirm: &#39;确认发送&#39;, success: function (data, ret) &#123; Layer.alert(ret.msg + &quot;,返回数据：&quot; + JSON.stringify(data)); //如果需要阻止成功提示，则必须使用return false; //return false; &#125;, error: function (data, ret) &#123; console.log(data, ret); Layer.alert(ret.msg); return false; &#125; &#125; 新选项卡 btn-addtabs &#123; name: &#39;addtabs&#39;, text: __(&#39;新选项卡中打开&#39;), title: __(&#39;新选项卡中打开&#39;), classname: &#39;btn btn-xs btn-warning btn-addtabs&#39;, icon: &#39;fa fa-folder-o&#39;, url: &#39;example/bootstraptable/detail&#39; &#125; 自定义点击按钮事件 btn-click此处例子为点击弹出窗口，输入文字，执行ajax请求 &#123; name: &#39;shield&#39;, text: &#39;完成&#39;, icon: &#39;fa fa-check-circle fa-fw&#39;, classname: &#39;btn btn-xs btn-success btn-click&#39;, click:function(e,s) &#123; layer.prompt(&#123;title:&quot;填写奖金数值&quot;&#125;,function(val, index)&#123; if(!val || val ==0 )&#123; layer.msg(&quot;请先填写正确的奖金数值！&quot;); return; &#125; if (isNaN(val)) &#123; layer.msg(&quot;请输入数字！&quot;); return; &#125; $.ajax(&#123; type: &quot;post&quot;, url: &quot;survey/over&quot;, data: &#123; ids:s.id, bonus:val &#125;, dataType: &quot;json&quot;, success: function (response) &#123; if(response.code == 2)&#123; layer.msg(response.msg) &#125; else&#123; layer.close(index); table.bootstrapTable(&#39;refresh&#39;); &#125; &#125; &#125;); &#125;); return false &#125;, refresh: true, visible: function (row) &#123; //返回true时按钮显示,返回false隐藏 // console.log(row) return !row.status; &#125; &#125;, 其他参数 dropdown: ‘更多’,//如果包含dropdown，将会以下拉列表的形式展示 &#123; name: &#39;addtabs&#39;, text: __(&#39;新选项卡中打开&#39;), title: __(&#39;新选项卡中打开&#39;), dropdown: &#39;更多&#39;,//如果包含dropdown，将会以下拉列表的形式展示 classname: &#39;btn btn-xs btn-warning btn-addtabs&#39;, icon: &#39;fa fa-folder-o&#39;, url: &#39;./ceshi1/demo1&#39; &#125;","categories":[],"tags":[]},{"title":"hexo-volantis主题修改代码高亮风格","slug":"hexo-volantis主题修改代码高亮风格","date":"2021-08-07T06:38:02.000Z","updated":"2021-08-07T12:04:17.044Z","comments":true,"path":"posts/22663.html","link":"","permalink":"https://maoshu.fun/posts/22663.html","excerpt":"","text":"前言 猫叔的博客是基于hexo制作的，选用主题为volantis，纵然这套主题我是特别喜欢，但它的代码高亮做的不是特别适合我，不如next主题里面的代码高亮风格那么好看（主要是暗色风格），但next主题我又不是特别喜欢，于是研究了下他的修改方法，终于找到 一篇改造博客，但里面多少有点错误并且步骤不完整，于是做一些补充。 步骤1.highlightjs不支持显示行号，改造使其支持1).修改ejs文件修改路径：themes/volantis/layout/_third-party/highlistjs/script.ejs 改造核心如下图，就是引入了highlightjs-line-numbers.min.js： 改造后代码： &lt;% if (theme.plugins.highlightjs.js) &#123; %&gt; &lt;%- js(theme.plugins.highlightjs.js) %&gt; &lt;script src=&quot;https://cdn.jsdelivr.net/npm/highlightjs-line-numbers.js@2.8.0/dist/highlightjs-line-numbers.min.js&quot;&gt;&lt;/script&gt; &lt;script&gt;hljs.initHighlightingOnLoad();&lt;/script&gt; &lt;script&gt;hljs.initLineNumbersOnLoad(&#123; singleLine: true &#125;);&lt;/script&gt; &lt;% &#125; %&gt; &lt;script&gt; volantis.pjax.push(()=&gt;&#123; document.querySelectorAll(&#39;pre code&#39;).forEach((block) =&gt; &#123; hljs.highlightBlock(block); hljs.lineNumbersBlock(block, &#123; singleLine: true &#125;); &#125;); &#125;,&quot;highlightjs&quot;) &lt;/script&gt; 注意，这时候可能控制台会报如下提示，只需把hljs.initHighlightingOnLoad()改为hljs.highlightAll()即可 Deprecated as of 10.6.0. initHighlightingOnLoad() is deprecated. Use highlightAll() instead. 2).创建行号的样式文件.styl路径：themes/volantis/source/css/ 目录下新建 _other 文件夹，然后在里面新建 codeblock.styl 文件，路径如下图： css样式代码如下： /* for block of numbers */ .hljs-ln-numbers &#123; -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; text-align: center; color: #666; border-right: 1px solid #666; vertical-align: top; padding-right: 5px !important; /* your custom style here */ &#125; /* for block of code */ .hljs-ln-code &#123; padding-left: 10px !important; &#125; 3.)引入styl文件修改路径：source/css/style.styl，添加以下内容： @import &#39;_other/*&#39; 2.禁用hexo默认的高亮设置打开hexo的根目录下的主配置文件_config.yml，highlight设为false highlight: enable: false 3.修改volantis的高亮设置修改路径：_config.volantis.yml或者volantis主题下的_config.yml文件，搜索 highlightjs 关键字，找到高亮配置（如果没有的话，则添加即可），把他开启，并设置新的css样式 1.找合适的css样式表去官网找 https://highlightjs.org/static/demo/点击左侧theme查看效果，最终挑选好喜欢的样式这里我找的是Night Owl这款，于是拼接样式地址https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@10/build/styles/night-owl.min.css，重点就是结尾的文件名night-owl，规则就是驼峰写法的转换。 2.修改配置enable改为true，修改css引用 plugins: highlightjs: enable: true js: https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@10/build/highlight.min.js css: https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@10/build/styles/night-owl.min.css 完成改完记得 hexo g &amp;&amp; hexo s 查看效果，如果有些文章不生效，那就需要先执行 hexo clean 效果图：","categories":[],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://maoshu.fun/tags/hexo/"}]},{"title":"fastadmin 常用知识点整理","slug":"fastadmin","date":"2021-08-07T03:52:53.000Z","updated":"2021-08-07T23:54:52.423Z","comments":true,"path":"posts/25256.html","link":"","permalink":"https://maoshu.fun/posts/25256.html","excerpt":"","text":"js里怎么取到config里的数据 以token为例，这里先在后端把数据写入config，然后在前端js里就会有我们设置的token了 1.后端php部分$this-&gt;assignconfig(&quot;token&quot;, $this-&gt;auth-&gt;token); 2.前端js部分console.log(Config.token) 通过变量Config可以取到你想要的东西","categories":[],"tags":[{"name":"fastadmin","slug":"fastadmin","permalink":"https://maoshu.fun/tags/fastadmin/"}]}],"categories":[],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://maoshu.fun/tags/hexo/"},{"name":"fastadmin","slug":"fastadmin","permalink":"https://maoshu.fun/tags/fastadmin/"}]}